{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\reactproject\\\\frontend\\\\music-player\\\\src\\\\components\\\\playlistdetail\\\\playlistdetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playlistdetail() {\n  _s();\n  const {\n    id\n  } = useParams(); // Extracting id from useParams()\n\n  const [songs, setSongs] = useState([]);\n  const [songId, setId] = useState([]);\n  const fetchPlaylistData = async playlistId => {\n    try {\n      let header = new Headers();\n      header.append(\"Content-type\", 'application/json');\n      let token = localStorage.getItem('token');\n      if (token) {\n        header.append('Authorization', token);\n      }\n      const requestOptions = {\n        method: 'GET',\n        headers: header\n      };\n      const response = await fetch(`http://localhost:8000/playlist/${playlistId}/listplaylistsong/`, requestOptions);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSongs(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPlaylistData(id);\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white\",\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Playlistdetail, \"lATGctWqHwMMzxsbks4Xehu8jng=\", false, function () {\n  return [useParams];\n});\n_c = Playlistdetail;\nexport default Playlistdetail;\nvar _c;\n$RefreshReg$(_c, \"Playlistdetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Playlistdetail","_s","id","songs","setSongs","songId","setId","fetchPlaylistData","playlistId","header","Headers","append","token","localStorage","getItem","requestOptions","method","headers","response","fetch","ok","Error","data","json","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/reactproject/frontend/music-player/src/components/playlistdetail/playlistdetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Playlistdetail() {\r\n    const { id } = useParams(); // Extracting id from useParams()\r\n\r\n    const [songs, setSongs] = useState([]);\r\n    const [songId, setId] = useState([]);\r\n\r\n    \r\n    const fetchPlaylistData = async (playlistId) => { \r\n        try {\r\n            let header = new Headers();\r\n            header.append(\"Content-type\", 'application/json');\r\n            let token = localStorage.getItem('token');\r\n            if (token) {\r\n                header.append('Authorization', token);\r\n            }\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: header\r\n            };\r\n            const response = await fetch(`http://localhost:8000/playlist/${playlistId}/listplaylistsong/`, requestOptions);\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            setSongs(data);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchPlaylistData(id);\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-white\">Hello</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playlistdetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,KAAK,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGpC,MAAMY,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC5C,IAAI;MACA,IAAIC,MAAM,GAAG,IAAIC,OAAO,CAAC,CAAC;MAC1BD,MAAM,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;MACjD,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACzC,IAAIF,KAAK,EAAE;QACPH,MAAM,CAACE,MAAM,CAAC,eAAe,EAAEC,KAAK,CAAC;MACzC;MACA,MAAMG,cAAc,GAAG;QACnBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAER;MACb,CAAC;MACD,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiCX,UAAW,oBAAmB,EAAEO,cAAc,CAAC;MAC9G,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCnB,QAAQ,CAACkB,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAGD5B,SAAS,CAAC,MAAM;IACZW,iBAAiB,CAACL,EAAE,CAAC;EACzB,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EAER,oBACIH,OAAA;IAAA2B,QAAA,eACI3B,OAAA;MAAI4B,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEd;AAAC9B,EAAA,CAxCQD,cAAc;EAAA,QACJH,SAAS;AAAA;AAAAmC,EAAA,GADnBhC,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}