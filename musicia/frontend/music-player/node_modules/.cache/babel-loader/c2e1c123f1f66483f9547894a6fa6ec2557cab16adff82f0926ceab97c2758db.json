{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport './songdetail.css';\nfunction Songdetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const togglePlay = () => {\n    const music = document.getElementById('music');\n    if (isPlaying) {\n      music.pause();\n    } else {\n      music.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const [song, setSongs] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let header = new Headers();\n        header.append(\"Content-type\", 'application/json');\n        let token = localStorage.getItem('token');\n        if (token) {\n          header.append('Authorization', token);\n        }\n        const requestOptions = {\n          method: 'GET',\n          headers: header\n        };\n        const response = await fetch(`http://localhost:8000/song/${id}/`, requestOptions);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSongs(data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // return (\n  //     <div className=\"song\">\n  //         {song.song_file && (\n  //             <audio controls={true} autoPlay>\n  //                 <source src={song.song_file} />\n  //             </audio>\n  //         )}\n\n  //     </div>\n  // );\n}\n_s(Songdetail, \"318rahpb9aGub9KmjpQNaQrpb+I=\", false, function () {\n  return [useParams];\n});\n_c = Songdetail;\nexport default Songdetail;\nvar _c;\n$RefreshReg$(_c, \"Songdetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Songdetail","_s","id","isPlaying","setIsPlaying","togglePlay","music","document","getElementById","pause","play","song","setSongs","fetchData","header","Headers","append","token","localStorage","getItem","requestOptions","method","headers","response","fetch","ok","Error","data","json","error","console","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/reactproject/frontend/music-player/src/components/songdetail/songdetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport './songdetail.css';\r\n\r\n\r\nfunction Songdetail() {\r\n\r\n    const { id } = useParams();\r\n\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    const togglePlay = () => {\r\n        const music = document.getElementById('music');\r\n        if (isPlaying) {\r\n            music.pause();\r\n        } else {\r\n            music.play();\r\n        }\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n    const [song, setSongs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let header = new Headers();\r\n                header.append(\"Content-type\", 'application/json');\r\n                let token = localStorage.getItem('token');\r\n                if (token) {\r\n                    header.append('Authorization', token);\r\n                }\r\n                const requestOptions = {\r\n                    method: 'GET',\r\n                    headers: header\r\n                };\r\n\r\n                const response = await fetch(`http://localhost:8000/song/${id}/`, requestOptions);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setSongs(data);\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    // return (\r\n    //     <div className=\"song\">\r\n    //         {song.song_file && (\r\n    //             <audio controls={true} autoPlay>\r\n    //                 <source src={song.song_file} />\r\n    //             </audio>\r\n    //         )}\r\n\r\n    //     </div>\r\n    // );\r\n}\r\n\r\nexport default Songdetail;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,kBAAkB;AAGzB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM;IAAEC;EAAG,CAAC,GAAGH,SAAS,CAAC,CAAC;EAE1B,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;IAC9C,IAAIL,SAAS,EAAE;MACXG,KAAK,CAACG,KAAK,CAAC,CAAC;IACjB,CAAC,MAAM;MACHH,KAAK,CAACI,IAAI,CAAC,CAAC;IAChB;IACAN,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EACD,MAAM,CAACQ,IAAI,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAErCC,SAAS,CAAC,MAAM;IACZ,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,IAAIC,MAAM,GAAG,IAAIC,OAAO,CAAC,CAAC;QAC1BD,MAAM,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;QACjD,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACzC,IAAIF,KAAK,EAAE;UACPH,MAAM,CAACE,MAAM,CAAC,eAAe,EAAEC,KAAK,CAAC;QACzC;QACA,MAAMG,cAAc,GAAG;UACnBC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAER;QACb,CAAC;QAED,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6BtB,EAAG,GAAE,EAAEkB,cAAc,CAAC;QACjF,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClChB,QAAQ,CAACe,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAClC;IACJ,CAAC;IACDhB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;AACJ;AAACZ,EAAA,CAtDQD,UAAU;EAAA,QAEAD,SAAS;AAAA;AAAAgC,EAAA,GAFnB/B,UAAU;AAwDnB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}