{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\reactproject\\\\frontend\\\\music-player\\\\src\\\\components\\\\songdetail\\\\songdetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport './songdetail.css';\nimport Song from \"../songs/songs\";\nimport { Row, Col } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faHeart, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Songdetail() {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const togglePlay = () => {\n    const music = document.getElementById('music');\n    if (isPlaying) {\n      music.pause();\n    } else {\n      music.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const [song, setSongs] = useState([]);\n  useEffect(() => {\n    // const fetchData = async (id) => {\n    //     try {\n    //         let header = new Headers();\n    //         header.append(\"Content-type\", 'application/json');\n    //         let token = localStorage.getItem('token');\n    //         if (token) {\n    //             header.append('Authorization', token);\n    //         }\n    //         const requestOptions = {\n    //             method: 'GET',\n    //             headers: header\n    //         };\n\n    //         const response = await fetch(`http://localhost:8000/song/${id}/`, requestOptions);\n    //         if (!response.ok) {\n    //             throw new Error('Network response was not ok');\n    //         }\n    //         const data = await response.json();\n    //         setSongs(data);\n    //         console.log(data);\n    //     } catch (error) {\n    //         console.error('Error:', error);\n    //     }\n    // };\n    // fetchData(3);.\n    setSongs(localStorage.getItem('songData'));\n  }, []);\n  const renderTooltiplike = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n    id: \"button-tooltip\",\n    ...props,\n    children: \"like\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n  const renderTooltipadd = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n    id: \"button-tooltip\",\n    ...props,\n    children: \"add to playlist\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n  const renderTooltipmore = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n    id: \"button-tooltip\",\n    ...props,\n    children: \"more options\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(Songdetail, \"WD6S47kgDVnlPsOxvECAge64kr0=\");\n_c = Songdetail;\nexport default Songdetail;\nvar _c;\n$RefreshReg$(_c, \"Songdetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Song","Row","Col","Container","FontAwesomeIcon","faBars","faHeart","faPlus","Button","OverlayTrigger","Tooltip","jsxDEV","_jsxDEV","Songdetail","_s","isPlaying","setIsPlaying","togglePlay","music","document","getElementById","pause","play","song","setSongs","localStorage","getItem","renderTooltiplike","props","id","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTooltipadd","renderTooltipmore","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/reactproject/frontend/music-player/src/components/songdetail/songdetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport './songdetail.css';\r\nimport Song from \"../songs/songs\";\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faHeart, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nfunction Songdetail() {\r\n\r\n\r\n\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    const togglePlay = () => {\r\n        const music = document.getElementById('music');\r\n        if (isPlaying) {\r\n            music.pause();\r\n        } else {\r\n            music.play();\r\n        }\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n    const [song, setSongs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // const fetchData = async (id) => {\r\n        //     try {\r\n        //         let header = new Headers();\r\n        //         header.append(\"Content-type\", 'application/json');\r\n        //         let token = localStorage.getItem('token');\r\n        //         if (token) {\r\n        //             header.append('Authorization', token);\r\n        //         }\r\n        //         const requestOptions = {\r\n        //             method: 'GET',\r\n        //             headers: header\r\n        //         };\r\n\r\n        //         const response = await fetch(`http://localhost:8000/song/${id}/`, requestOptions);\r\n        //         if (!response.ok) {\r\n        //             throw new Error('Network response was not ok');\r\n        //         }\r\n        //         const data = await response.json();\r\n        //         setSongs(data);\r\n        //         console.log(data);\r\n        //     } catch (error) {\r\n        //         console.error('Error:', error);\r\n        //     }\r\n        // };\r\n        // fetchData(3);.\r\n        setSongs(localStorage.getItem('songData'))\r\n    }, []);\r\n\r\n\r\n\r\n    const renderTooltiplike = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n            like\r\n        </Tooltip>\r\n    );\r\n    const renderTooltipadd = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n            add to playlist\r\n        </Tooltip>\r\n    );\r\n    const renderTooltipmore = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n            more options\r\n        </Tooltip>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {/* <Row className=\"play-div\">\r\n                <Col lg=\"4\" className=\"song-title\">\r\n                    <img src={song.image} className=\"song-image rounded ms-2\" alt=\"\" />\r\n                    <h3 className=\"title ms-2 text-white\">{song.name}</h3>\r\n                </Col>\r\n                <Col lg=\"4\">\r\n                    <div className=\"song\">\r\n                        {song.song_file && (\r\n                            <div className=\"audio-player\">\r\n                                <audio controls={true}>\r\n                                    <source src={song.song_file} />\r\n                                </audio>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Col>\r\n                <Col lg=\"4\" className=\"text-end song-button\">\r\n                    <div className=\"me-5\">\r\n                        <OverlayTrigger\r\n                            placement=\"top\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={renderTooltiplike}\r\n                        >\r\n                            <button className=\"icon-button btn\"><FontAwesomeIcon className=\"icon m-3\" icon={faHeart}></FontAwesomeIcon></button>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger\r\n                            placement=\"top\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={renderTooltipadd}\r\n                        >\r\n                            <button className=\"icon-button btn\"><FontAwesomeIcon className=\"icon m-3\" icon={faPlus}></FontAwesomeIcon></button>\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger\r\n                            placement=\"top\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={renderTooltipmore}\r\n                        >\r\n                            <button className=\"icon-button btn\"><FontAwesomeIcon className=\"icon m-3\" icon={faBars}></FontAwesomeIcon></button>\r\n                        </OverlayTrigger>\r\n                    </div>\r\n                </Col>\r\n            </Row> */}\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Songdetail;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,gBAAgB;AACjC,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC1C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,EAAEC,OAAO,EAAEC,MAAM,QAAQ,mCAAmC;AAC3E,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAIlB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMoB,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;IAC9C,IAAIL,SAAS,EAAE;MACXG,KAAK,CAACG,KAAK,CAAC,CAAC;IACjB,CAAC,MAAM;MACHH,KAAK,CAACI,IAAI,CAAC,CAAC;IAChB;IACAN,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EACD,MAAM,CAACQ,IAAI,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAErCC,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA0B,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMC,iBAAiB,GAAIC,KAAK,iBAC5BhB,OAAA,CAACF,OAAO;IAACmB,EAAE,EAAC,gBAAgB;IAAA,GAAKD,KAAK;IAAAE,QAAA,EAAE;EAExC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CACZ;EACD,MAAMC,gBAAgB,GAAIP,KAAK,iBAC3BhB,OAAA,CAACF,OAAO;IAACmB,EAAE,EAAC,gBAAgB;IAAA,GAAKD,KAAK;IAAAE,QAAA,EAAE;EAExC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CACZ;EACD,MAAME,iBAAiB,GAAIR,KAAK,iBAC5BhB,OAAA,CAACF,OAAO;IAACmB,EAAE,EAAC,gBAAgB;IAAA,GAAKD,KAAK;IAAAE,QAAA,EAAE;EAExC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CACZ;EAED,oBACItB,OAAA;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgDK,CAAC;AAId;AAACpB,EAAA,CArHQD,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAyHnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}