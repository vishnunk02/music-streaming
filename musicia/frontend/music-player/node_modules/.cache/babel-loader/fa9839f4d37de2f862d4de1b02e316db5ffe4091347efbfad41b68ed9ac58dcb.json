{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\reactproject\\\\frontend\\\\music-player\\\\src\\\\components\\\\songdetail\\\\songdetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport './songdetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Songdetail(props) {\n  _s();\n  const id = props.propFromParent;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let header = new Headers();\n        header.append(\"Content-type\", 'application/json');\n        let token = localStorage.getItem('token');\n        if (token) {\n          header.append('Authorization', token);\n        }\n        const requestOptions = {\n          method: 'GET',\n          headers: header\n        };\n        const response = await fetch(`http://localhost:8000/song/${id}/`, requestOptions);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSong(data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    if (id) {\n      fetchData();\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    children: song.song_file !== '' && /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      autoPlay: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: song.song_file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Songdetail, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Songdetail;\nexport default Songdetail;\nvar _c;\n$RefreshReg$(_c, \"Songdetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Songdetail","props","_s","id","propFromParent","fetchData","header","Headers","append","token","localStorage","getItem","requestOptions","method","headers","response","fetch","ok","Error","data","json","setSong","error","console","className","children","song","song_file","controls","autoPlay","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/reactproject/frontend/music-player/src/components/songdetail/songdetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport './songdetail.css';\r\n\r\nfunction Songdetail(props) {\r\n    const id = props.propFromParent;\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let header = new Headers();\r\n                header.append(\"Content-type\", 'application/json');\r\n                let token = localStorage.getItem('token');\r\n                if (token) {\r\n                    header.append('Authorization', token);\r\n                }\r\n                const requestOptions = {\r\n                    method: 'GET',\r\n                    headers: header\r\n                };\r\n\r\n                const response = await fetch(`http://localhost:8000/song/${id}/`, requestOptions);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setSong(data);\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        };\r\n        if (id) {\r\n            fetchData();\r\n        }\r\n    }, [id]);\r\n\r\n    return (\r\n        <div className=\"song\">\r\n            {song.song_file !== '' && (\r\n                <audio controls={true} autoPlay>\r\n                    <source src={song.song_file} />\r\n                </audio>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Songdetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAMC,EAAE,GAAGF,KAAK,CAACG,cAAc;EAC/BR,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,IAAIC,MAAM,GAAG,IAAIC,OAAO,CAAC,CAAC;QAC1BD,MAAM,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;QACjD,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACzC,IAAIF,KAAK,EAAE;UACPH,MAAM,CAACE,MAAM,CAAC,eAAe,EAAEC,KAAK,CAAC;QACzC;QACA,MAAMG,cAAc,GAAG;UACnBC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAER;QACb,CAAC;QAED,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6Bb,EAAG,GAAE,EAAES,cAAc,CAAC;QACjF,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACF,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAClC;IACJ,CAAC;IACD,IAAInB,EAAE,EAAE;MACJE,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACF,EAAE,CAAC,CAAC;EAER,oBACIJ,OAAA;IAAKyB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAChBC,IAAI,CAACC,SAAS,KAAK,EAAE,iBAClB5B,OAAA;MAAO6B,QAAQ,EAAE,IAAK;MAACC,QAAQ;MAAAJ,QAAA,eAC3B1B,OAAA;QAAQ+B,GAAG,EAAEJ,IAAI,CAACC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EACV;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEd;AAAChC,EAAA,CAzCQF,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AA2CnB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}