{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\reactproject\\\\frontend\\\\music-player\\\\src\\\\components\\\\songs\\\\songs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Song() {\n  _s();\n  const [song, setSong] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const requestOptions = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': token ? token : ''\n          }\n        };\n        const response = await fetch('http://localhost:8000/song/', requestOptions);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSong(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array to execute only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }, this), song && /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: song.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: song.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Song, \"VhPglIZXG7w6Aooxssrvhlp3wJ4=\");\n_c = Song;\nexport default Song;\nvar _c;\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","jsxDEV","_jsxDEV","Song","_s","song","setSong","error","setError","fetchData","token","localStorage","getItem","requestOptions","method","headers","response","fetch","ok","Error","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Img","variant","src","imageUrl","Body","Title","title","Text","description","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/reactproject/frontend/music-player/src/components/songs/songs.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction Song() {\r\n    const [song, setSong] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const requestOptions = {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': token ? token : ''\r\n                    }\r\n                };\r\n\r\n                const response = await fetch('http://localhost:8000/song/', requestOptions);\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setSong(data);\r\n            } catch (error) {\r\n                setError(error.message);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []); // Empty dependency array to execute only once\r\n\r\n    return (\r\n        <div>\r\n            {error && <p>Error: {error}</p>}\r\n            {song && (\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Img variant=\"top\" src={song.imageUrl} />\r\n                    <Card.Body>\r\n                        <Card.Title>{song.title}</Card.Title>\r\n                        <Card.Text>{song.description}</Card.Text>\r\n                        <Button variant=\"primary\">Go somewhere</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Song;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,cAAc,GAAG;UACnBC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAEL,KAAK,GAAGA,KAAK,GAAG;UACrC;QACJ,CAAC;QAED,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAEJ,cAAc,CAAC;QAC3E,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCf,OAAO,CAACc,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOb,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAACe,OAAO,CAAC;MAC3B;IACJ,CAAC;IAEDb,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIP,OAAA;IAAAqB,QAAA,GACKhB,KAAK,iBAAIL,OAAA;MAAAqB,QAAA,GAAG,SAAO,EAAChB,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BtB,IAAI,iBACDH,OAAA,CAACF,IAAI;MAAC4B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAN,QAAA,gBAC5BrB,OAAA,CAACF,IAAI,CAAC8B,GAAG;QAACC,OAAO,EAAC,KAAK;QAACC,GAAG,EAAE3B,IAAI,CAAC4B;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9CzB,OAAA,CAACF,IAAI,CAACkC,IAAI;QAAAX,QAAA,gBACNrB,OAAA,CAACF,IAAI,CAACmC,KAAK;UAAAZ,QAAA,EAAElB,IAAI,CAAC+B;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACrCzB,OAAA,CAACF,IAAI,CAACqC,IAAI;UAAAd,QAAA,EAAElB,IAAI,CAACiC;QAAW;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACzCzB,OAAA,CAACH,MAAM;UAACgC,OAAO,EAAC,SAAS;UAAAR,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACvB,EAAA,CA7CQD,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA+Cb,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}